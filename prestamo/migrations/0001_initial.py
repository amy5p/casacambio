# Generated by Django 2.2.3 on 2019-09-29 02:02

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import fuente.utils


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('almacen', '0001_initial'),
        ('persona', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Cuenta',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numero', models.CharField(max_length=8, unique=True, verbose_name='Número')),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de creación')),
                ('tags', models.CharField(blank=True, max_length=200)),
                ('cliente', models.ForeignKey(blank=True, default=None, help_text='Cliente del préstamo.', null=True, on_delete=django.db.models.deletion.PROTECT, to='persona.Persona', verbose_name='Cliente')),
                ('user', models.ForeignKey(blank=True, default=None, help_text='Usuario que creó esto.', null=True, on_delete=django.db.models.deletion.SET_DEFAULT, to=settings.AUTH_USER_MODEL, verbose_name='Usuario')),
            ],
            options={
                'verbose_name': 'Cuenta',
                'verbose_name_plural': 'Cuentas',
            },
        ),
        migrations.CreateModel(
            name='Transaccion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('monto', models.DecimalField(decimal_places=2, default=0, help_text='Importe de la transacción.', max_digits=12, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Monto')),
                ('modo', models.CharField(choices=[('EFECTIVO', 'Efectivo'), ('CUENTA', 'Cuenta'), ('TARJETA', 'Tarjeta de crédito'), ('PAYPAL', 'Paypal'), ('BITCOIN', 'Bitcoin'), ('CHEQUE', 'Cheque')], default='EFECTIVO', help_text='Modo de pago utilizado en esta transacción.', max_length=20, verbose_name='Modo')),
                ('tipo', models.CharField(choices=[('PAGO', 'Pago'), ('DESEMBOLSO', 'Desembolso'), ('TRANSFERENCIA', 'Transferencia')], default='TRANSFERENCIA', max_length=20, verbose_name='Tipo')),
                ('fecha_efectiva', models.DateField(default=django.utils.timezone.now, help_text='Fecha en que se hace efectiva esta transacción.', verbose_name='Fecha efectiva')),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de entrada')),
                ('note', models.TextField(blank=True, verbose_name='Nota')),
                ('tags', models.CharField(blank=True, max_length=200)),
                ('author', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Creado por')),
                ('desde', models.ForeignKey(blank=True, default=None, help_text='Cuenta desde donde procede el dinero.', null=True, on_delete=django.db.models.deletion.CASCADE, to='prestamo.Cuenta', verbose_name='Desde')),
                ('hacia', models.ForeignKey(blank=True, default=None, help_text='Cuenta hacia donde va el dinero (opcional). Deje en blanco si es en efectivo.', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='hacia_set2', to='prestamo.Cuenta', verbose_name='Hacia')),
            ],
            options={
                'verbose_name': 'Transacción',
                'verbose_name_plural': 'Transacciones',
            },
            bases=(models.Model, fuente.utils.Fecha),
        ),
        migrations.CreateModel(
            name='Solicitud',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(help_text='Indíquenos su nombre completo.', max_length=50, verbose_name='Nombres y apellidos')),
                ('cedula', models.CharField(help_text='Indíquenos su número de cédula.', max_length=20, verbose_name='Cédula')),
                ('telefono', models.CharField(help_text='Indíquenos su número de teléfono movil.', max_length=20, verbose_name='Teléfono celular')),
                ('email', models.EmailField(blank=True, help_text='Indíquenos su correo electrónico.', max_length=254, verbose_name='Correo electrónico')),
                ('nota', models.TextField(blank=True, verbose_name='Comentario adicional')),
                ('consentimiento', models.BooleanField(help_text='Declaro haber leído la política de privacidad, y estar de acuerdo con ella.', verbose_name='Estoy de acuerdo')),
                ('fecha', models.DateTimeField(auto_now_add=True, verbose_name='Fecha')),
                ('direccion', models.CharField(help_text='Dirección de su residencia o domicilio.', max_length=200, verbose_name='Dirección')),
                ('estado_civil', models.CharField(choices=[('SOLTERO', 'Soltero'), ('CASADO', 'Casado'), ('UNION_LIBRE', 'Unión libre'), ('OTRO', 'Otro')], max_length=10, verbose_name='Estado civil')),
                ('trabajo_nombre', models.CharField(blank=True, max_length=50, verbose_name='Lugar de trabajo')),
                ('trabajo_direccion', models.CharField(blank=True, max_length=200, verbose_name='Dirección del trabajo')),
                ('trabajo_telefono', models.CharField(blank=True, max_length=20, verbose_name='Teléfono del trabajo')),
                ('trabajo_posicion', models.CharField(blank=True, help_text='Puesto que ocupa dentro de la empresa.', max_length=50, verbose_name='Puesto que ocupa')),
                ('trabajo_ingresos', models.DecimalField(blank=True, decimal_places=2, default=0, help_text='Sus ingresos mensuales dentro de la empresa.', max_digits=11, verbose_name='Ingresos mensuales')),
                ('trabajo_inicio', models.DateField(blank=True, help_text='Fecha en que empezó a formar parte de la empresa como empleado.', null=True, verbose_name='Fecha en que ingresó')),
                ('conyugue_nombre', models.CharField(blank=True, max_length=50, verbose_name='Nombre del conyugue')),
                ('conyugue_trabajo_nombre', models.CharField(blank=True, max_length=50, verbose_name='Lugar de trabajo del conyugue')),
                ('conyugue_trabajo_posicion', models.CharField(blank=True, help_text='Puesto que ocupa el conyugue dentro de la empresa.', max_length=50, verbose_name='Puesto que ocupa')),
                ('conyugue_trabajo_direccion', models.CharField(blank=True, max_length=200, verbose_name='Dirección del trabajo dle conyugue')),
                ('conyugue_trabajo_telefono', models.CharField(blank=True, max_length=20, verbose_name='Teléfono del trabajo del conyugue')),
                ('conyugue_trabajo_ingresos', models.DecimalField(blank=True, decimal_places=2, default=0, help_text='Sus ingresos mensuales dentro de la empresa.', max_digits=11, verbose_name='Ingresos mensuales del conyugue')),
                ('ref1_nombre', models.CharField(blank=True, max_length=50, verbose_name='Nombre')),
                ('ref1_parentesco', models.CharField(blank=True, max_length=20, verbose_name='Parentesco')),
                ('ref1_telefono', models.CharField(blank=True, max_length=20, verbose_name='Teléfono')),
                ('ref1_celular', models.CharField(blank=True, max_length=20, verbose_name='Celular')),
                ('ref1_direccion', models.CharField(blank=True, max_length=200, verbose_name='Dirección')),
                ('ref2_nombre', models.CharField(blank=True, max_length=50, verbose_name='Nombre')),
                ('ref2_parentesco', models.CharField(blank=True, max_length=20, verbose_name='Parentesco')),
                ('ref2_telefono', models.CharField(blank=True, max_length=20, verbose_name='Teléfono')),
                ('ref2_celular', models.CharField(blank=True, max_length=20, verbose_name='Celular')),
                ('ref2_direccion', models.CharField(blank=True, max_length=200, verbose_name='Dirección')),
                ('ref3_nombre', models.CharField(blank=True, max_length=50, verbose_name='Nombre de la empresa')),
                ('ref3_telefono', models.CharField(blank=True, max_length=20, verbose_name='Teléfono')),
                ('ref4_nombre', models.CharField(blank=True, max_length=50, verbose_name='Nombre de la empresa')),
                ('ref4_telefono', models.CharField(blank=True, max_length=20, verbose_name='Teléfono')),
                ('cedula_file', models.FileField(blank=True, help_text='Suba la copia de su cédula.', upload_to='prestamos/solicitud/%Y/%m/', verbose_name='Cédula')),
                ('carta_de_trabajo_file', models.FileField(blank=True, help_text='Suba la carta de trabajo escaneada.', upload_to='prestamos/solicitud/%Y/%m/', verbose_name='Carta de trabajo')),
                ('user', models.ForeignKey(blank=True, default=None, editable=False, help_text='Usuario que registró la solicitud (opcional)', null=True, on_delete=django.db.models.deletion.SET_DEFAULT, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Solicitud',
                'verbose_name_plural': 'Solicitudes',
            },
            bases=(models.Model, fuente.utils.Texto),
        ),
        migrations.CreateModel(
            name='Prestamo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('monto', models.DecimalField(decimal_places=2, help_text='Monto del préstamo.', max_digits=12, validators=[django.core.validators.MinValueValidator(0, 'El monto debe ser mayor o igual a 0.'), django.core.validators.MaxValueValidator(9999999999.99)], verbose_name='Monto')),
                ('tasa', models.DecimalField(decimal_places=2, max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='Tasa de interés')),
                ('cuotas', models.IntegerField(validators=[django.core.validators.MinValueValidator(1, 'La cantidad de cuotas debe ser mayor que 0.')], verbose_name='Cantidad de cuotas')),
                ('periodo', models.CharField(choices=[('DIARIO', 'Diario'), ('SEMANAL', 'Semanal'), ('QUINCENAL', 'Quincenal'), ('MENSUAL', 'Mensual'), ('ANUAL', 'Anual')], max_length=10, verbose_name='Periodo de pagos')),
                ('cuotas_tipo', models.CharField(choices=[('FIJA', 'Cuota fija'), ('VARIABLE', 'Cuota variable')], max_length=10, verbose_name='Tipo de cuotas')),
                ('mora', models.DecimalField(decimal_places=2, default=0, help_text='Este es el porcentaje del valor de la cuota que se le cargará en caso de atrasos.', max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='Interés por mora')),
                ('note', models.TextField(blank=True, verbose_name='Nota')),
                ('fecha_inicio', models.DateField(default=django.utils.timezone.now, verbose_name='Fecha de inicio')),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de creación')),
                ('isactive', models.BooleanField(default=True, help_text='Indica si el préstamos estará o no disponible, si no está activo entonces no se tomará en cuenta para los cálculos.', verbose_name='¿Está activo?')),
                ('tags', models.CharField(blank=True, max_length=200)),
                ('almacen', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='almacen.Almacen', verbose_name='Almacén')),
                ('author', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Creado por')),
                ('cliente', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='persona.Persona', verbose_name='Cliente')),
                ('cuenta', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='prestamo.Cuenta', verbose_name='Cuenta')),
            ],
            options={
                'verbose_name': 'Préstamo',
                'verbose_name_plural': 'Préstamos',
            },
            bases=(models.Model, fuente.utils.PrestamoBase, fuente.utils.Texto),
        ),
    ]
